{"version":3,"file":"static/js/118.5fe46cf1.chunk.js","mappings":"2PAgEA,UAzDgB,WAEZ,IAAMA,GAAWC,EAAAA,EAAAA,MAYb,OACE,iBAAMC,SAXS,SAAAC,GAEjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAQL,EAAKG,SAASE,MAAMD,MAC5BE,EAAWN,EAAKG,SAASG,SAASF,MACxCT,GAASY,EAAAA,EAAAA,IAAgB,CAAEL,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IACvC,EAGC,UACA,UAAC,KAAD,CACAE,gBAAkB,SAClBC,OAAS,UACTC,EAAI,KAAOC,EAAK,OAAQC,GAAO,GAAKC,EAAI,IAAMC,EAAI,IAAMC,QAAU,OAASC,cAAgB,SAC3FC,WAAe,SAAWC,eAAmB,SAAYC,aAAiB,GAJ1E,WAKI,UAAC,KAAD,YACO,UAAC,IAAD,CAAWC,MAAQ,WAAaC,SAAW,GAAKC,WAAa,IAA7D,kBACG,SAAC,EAAAC,EAAD,CAAOC,QAAU,mBAAqBf,OAAS,QAAUG,GAAO,EAE9Da,KAAK,OACLvB,KAAK,OACLwB,MAAM,yIACNC,UAAQ,QAGZ,UAAC,IAAD,CAAWP,MAAQ,WAAaC,SAAW,GAAKC,WAAa,IAA7D,oBACE,SAAC,EAAAC,EAAD,CAAOC,QAAU,mBAAqBf,OAAS,QAAUG,GAAO,EAE9Da,KAAK,QACLvB,KAAK,QACLwB,MAAM,yIACNC,UAAQ,QAGZ,UAAC,IAAD,CAAWP,MAAQ,WAAaC,SAAW,GAAKC,WAAa,IAA7D,sBACE,SAAC,EAAAC,EAAD,CAAOC,QAAU,mBAAqBf,OAAS,QAAUG,GAAO,EAE9Da,KAAK,WACLvB,KAAK,WACLwB,MAAM,+FACNC,UAAQ,WAIX,SAAC,IAAD,CAAQP,MAAQ,aAAeP,EAAK,IAAOe,QAAY,EAAIhB,GAAO,EAAIiB,GAAM,EAAGJ,KAAK,SAApF,uBACA,SAAC,KAAD,CAASK,GAAG,SAAZ,UAAqB,SAAC,IAAD,CAAMV,MAAQ,eAAd,yBAI3C,C,uKCrDGW,GAAOC,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtC,GAA2CI,EAAAA,EAAAA,IAAiBJ,GAApDK,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAeC,GAAlC,YACA,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,GADwB,QAAC,QAGvBC,OAAQJ,EAAa,cAAW,EAChCK,IAAKL,EAAa,gBAAa,EAC/BL,IAAAA,EACAI,WAAWO,EAAAA,EAAAA,IAAG,cAAeP,IAC1BE,GAPmB,IAQtBM,MAAOX,IAGZ,IACDJ,EAAKgB,YAAc,M","sources":["pages/register/Register.jsx","../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs"],"sourcesContent":["import { fetchSignUpUser } from 'redux/user/userOperations';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\n//chakra\nimport { Box, FormControl, FormLabel, Input, Button, Link } from \"@chakra-ui/react\"\n\nconst Register =()=> {\n\n    const dispatch = useDispatch();\n\n    const hendleSubmit = e => {\n\n        e.preventDefault();\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const email = form.elements.email.value;\n        const password = form.elements.password.value;\n        dispatch(fetchSignUpUser({ name, email, password }));\n        }\n    \n        return (\n          <form onSubmit={ hendleSubmit }>\n          <Box \n          backgroundColor={ 'Window' }\n          shadow={ 'dark-lg' }\n          p={ '10' } m = {'auto'} mt = { 20 } w={ 330 } h={ 300 } display={ 'flex' } flexDirection={ 'column' }\n          alignItems = { 'center' } justifyContent = { 'center' }  borderRadius = { 20 }>\n              <FormControl>\n                     <FormLabel color={ 'InfoText' } fontSize={ 15 } fontWeight={ 700 } >Name\n                        <Input bgColor={ 'chakra-subtle-bg' } shadow={ 'inner' } mt = { 2 }\n                          \n                          type=\"text\"\n                          name=\"name\"\n                          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                          required>\n                        </Input>\n                        </FormLabel>\n                      <FormLabel color={ 'InfoText' } fontSize={ 15 } fontWeight={ 700 } >E-mail\n                        <Input bgColor={ 'chakra-subtle-bg' } shadow={ 'inner' } mt = { 2 }\n                          \n                          type=\"email\"\n                          name=\"email\"\n                          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                          required>\n                         </Input>\n                        </FormLabel>\n                      <FormLabel color={ 'InfoText' } fontSize={ 15 } fontWeight={ 700 } >Passowrd\n                        <Input bgColor={ 'chakra-subtle-bg' } shadow={ 'inner' } mt = { 2 }\n                         \n                          type=\"password\"\n                          name=\"password\"\n                          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                          required\n                        />\n                       </FormLabel>\n                       </FormControl>\n                       <Button color={ 'ButtonText' } w ={ 100 }  padding = { 2 } mt = { 5 } mb = {2} type=\"submit\">Register</Button>\n                       <NavLink to=\"/login\"><Link color={ \"linkedin.700\" }>login</Link></NavLink>\n                </Box>\n                </form>\n        );\n};\n\nexport default Register;","// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n"],"names":["dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","email","password","fetchSignUpUser","backgroundColor","shadow","p","m","mt","w","h","display","flexDirection","alignItems","justifyContent","borderRadius","color","fontSize","fontWeight","I","bgColor","type","title","required","padding","mb","to","Link","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","className","isExternal","rest","jsx","chakra","target","rel","cx","__css","displayName"],"sourceRoot":""}